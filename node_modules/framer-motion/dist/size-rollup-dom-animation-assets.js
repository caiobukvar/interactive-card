const t="undefined"!=typeof document;function e(t){return"object"==typeof t&&Object.prototype.hasOwnProperty.call(t,"current")}function r(t){return"string"==typeof t||Array.isArray(t)}function a(t){return"object"==typeof t&&"function"==typeof t.start}const n=["initial","animate","exit","whileHover","whileDrag","whileTap","whileFocus","whileInView"];function s(t){return a(t.animate)||n.some(e=>r(t[e]))}function o(t){return Boolean(s(t)||t.variants)}const i={animation:["animate","exit","variants","whileHover","whileTap","whileFocus","whileDrag","whileInView"],exit:["exit"],drag:["drag","dragControls"],focus:["whileFocus"],hover:["whileHover","onHoverStart","onHoverEnd"],tap:["whileTap","onTap","onTapStart","onTapCancel"],pan:["onPan","onPanStart","onPanSessionStart","onPanEnd"],inView:["whileInView","onViewportEnter","onViewportLeave"],layout:["layout","layoutId"]},f={};for(const t in i)f[t]={isEnabled:e=>i[t].some(t=>!!e[t])};const c=["animate","circle","defs","desc","ellipse","g","image","line","filter","marker","mask","metadata","path","pattern","polygon","polyline","rect","stop","switch","symbol","svg","text","tspan","use","view"];function l(t){return"string"==typeof t&&!t.includes("-")&&!!(c.indexOf(t)>-1||/[A-Z]/.test(t))}const d={},p=["transformPerspective","x","y","z","translateX","translateY","translateZ","scale","scaleX","scaleY","rotate","rotateX","rotateY","rotateZ","skew","skewX","skewY"],u=new Set(p);function g(t,{layout:e,layoutId:r}){return u.has(t)||t.startsWith("origin")||(e||void 0!==r)&&(!!d[t]||"opacity"===t)}const m=t=>Boolean(t&&t.getVelocity),h={x:"translateX",y:"translateY",z:"translateZ",transformPerspective:"perspective"},y=(t,e)=>p.indexOf(t)-p.indexOf(e);function v(t){return t.startsWith("--")}const w=(t,e)=>e&&"number"==typeof t?e.transform(t):t,x=(t,e,r)=>Math.min(Math.max(r,t),e),b={test:t=>"number"==typeof t,parse:parseFloat,transform:t=>t},k={...b,transform:t=>x(0,1,t)},O={...b,default:1},L=t=>Math.round(1e5*t)/1e5,T=/(-)?([\d]*\.?[\d])+/g,X=/(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))/gi,Y=/^(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))$/i;function $(t){return"string"==typeof t}const B=t=>({test:e=>$(e)&&e.endsWith(t)&&1===e.split(" ").length,parse:parseFloat,transform:e=>`${e}${t}`}),A=B("deg"),S=B("%"),W=B("px"),Z=B("vh"),P=B("vw"),R={...S,parse:t=>S.parse(t)/100,transform:t=>S.transform(100*t)},C={...b,transform:Math.round},H={borderWidth:W,borderTopWidth:W,borderRightWidth:W,borderBottomWidth:W,borderLeftWidth:W,borderRadius:W,radius:W,borderTopLeftRadius:W,borderTopRightRadius:W,borderBottomRightRadius:W,borderBottomLeftRadius:W,width:W,maxWidth:W,height:W,maxHeight:W,size:W,top:W,right:W,bottom:W,left:W,padding:W,paddingTop:W,paddingRight:W,paddingBottom:W,paddingLeft:W,margin:W,marginTop:W,marginRight:W,marginBottom:W,marginLeft:W,rotate:A,rotateX:A,rotateY:A,rotateZ:A,scale:O,scaleX:O,scaleY:O,scaleZ:O,skew:A,skewX:A,skewY:A,distance:W,translateX:W,translateY:W,translateZ:W,x:W,y:W,z:W,perspective:W,transformPerspective:W,opacity:k,originX:R,originY:R,originZ:W,zIndex:C,fillOpacity:k,strokeOpacity:k,numOctaves:C};function V(t,e,r,a){const{style:n,vars:s,transform:o,transformKeys:i,transformOrigin:f}=t;i.length=0;let c=!1,l=!1,d=!0;for(const t in e){const r=e[t];if(v(t)){s[t]=r;continue}const a=H[t],p=w(r,a);if(u.has(t)){if(c=!0,o[t]=p,i.push(t),!d)continue;r!==(a.default||0)&&(d=!1)}else t.startsWith("origin")?(l=!0,f[t]=p):n[t]=p}if(e.transform||(c||a?n.transform=function({transform:t,transformKeys:e},{enableHardwareAcceleration:r=!0,allowTransformNone:a=!0},n,s){let o="";e.sort(y);for(const r of e)o+=`${h[r]||r}(${t[r]}) `;return r&&!t.z&&(o+="translateZ(0)"),o=o.trim(),s?o=s(t,n?"":o):a&&n&&(o="none"),o}(t,r,d,a):n.transform&&(n.transform="none")),l){const{originX:t="50%",originY:e="50%",originZ:r=0}=f;n.transformOrigin=`${t} ${e} ${r}`}}function j(t,e,r){return"string"==typeof t?t:W.transform(e+r*t)}const z={offset:"stroke-dashoffset",array:"stroke-dasharray"},F={offset:"strokeDashoffset",array:"strokeDasharray"};function I(t,{attrX:e,attrY:r,originX:a,originY:n,pathLength:s,pathSpacing:o=1,pathOffset:i=0,...f},c,l,d){if(V(t,f,c,d),l)return void(t.style.viewBox&&(t.attrs.viewBox=t.style.viewBox));t.attrs=t.style,t.style={};const{attrs:p,style:u,dimensions:g}=t;p.transform&&(g&&(u.transform=p.transform),delete p.transform),g&&(void 0!==a||void 0!==n||u.transform)&&(u.transformOrigin=function(t,e,r){return`${j(e,t.x,t.width)} ${j(r,t.y,t.height)}`}(g,void 0!==a?a:.5,void 0!==n?n:.5)),void 0!==e&&(p.x=e),void 0!==r&&(p.y=r),void 0!==s&&function(t,e,r=1,a=0,n=!0){t.pathLength=1;const s=n?z:F;t[s.offset]=W.transform(-a);const o=W.transform(e),i=W.transform(r);t[s.array]=`${o} ${i}`}(p,s,o,i,!1)}const D=t=>"string"==typeof t&&"svg"===t.toLowerCase(),E=t=>t.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();function M(t,{style:e,vars:r},a,n){Object.assign(t.style,e,n&&n.getProjectionStyles(a));for(const e in r)t.style.setProperty(e,r[e])}const K=new Set(["baseFrequency","diffuseConstant","kernelMatrix","kernelUnitLength","keySplines","keyTimes","limitingConeAngle","markerHeight","markerWidth","numOctaves","targetX","targetY","surfaceScale","specularConstant","specularExponent","stdDeviation","tableValues","viewBox","gradientTransform","pathLength","startOffset","textLength","lengthAdjust"]);function q(t,e,r,a){M(t,e,void 0,a);for(const r in e.attrs)t.setAttribute(K.has(r)?r:E(r),e.attrs[r])}function N(t,e){const{style:r}=t,a={};for(const n in r)(m(r[n])||e.style&&m(e.style[n])||g(n,t))&&(a[n]=r[n]);return a}function U(t,e){const r=N(t,e);for(const a in t)if(m(t[a])||m(e[a])){r["x"===a||"y"===a?"attr"+a.toUpperCase():a]=t[a]}return r}function G(t,e,r,a={},n={}){return"function"==typeof e&&(e=e(void 0!==r?r:t.custom,a,n)),"string"==typeof e&&(e=t.variants&&t.variants[e]),"function"==typeof e&&(e=e(void 0!==r?r:t.custom,a,n)),e}const J=t=>Array.isArray(t),Q=t=>Boolean(t&&"object"==typeof t&&t.mix&&t.toValue),_=t=>J(t)?t[t.length-1]||0:t;export{X as A,H as B,W as C,A as D,P as E,Z as F,_ as G,E as H,u as I,J,p as K,v as L,M,K as N,e as a,s as b,r as c,m as d,g as e,f,V as g,I as h,t as i,D as j,l as k,Q as l,o as m,a as n,q as o,N as p,$ as q,G as r,U as s,Y as t,T as u,L as v,k as w,b as x,x as y,S as z};
